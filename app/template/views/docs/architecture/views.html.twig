{% extends 'docs.html.twig' %}

{% block title %}Documentation | Template System - Rhapsody Framework{% endblock %}

{% block content %}
<section id="hero-animation">
  <div id="landingHero" class="section-py landing-hero position-relative">
    <img src="{{ base_url }}public/template/docs/assets/img/backgrounds/hero-bg.png" alt="hero background" class="position-absolute top-0 start-50 translate-middle-x object-fit-contain w-100 h-100" data-speed="1">
    <div class="container">
      <div class="hero-text-box text-center">
        <h1 class="text-primary hero-title display-4 fw-bold">Generating UI With Views</h1>
        {# <h2 class="hero-sub-title h6 mb-4 pb-1">
           Some subtitle goes here
        </h2> 
        <div class="landing-hero-btn d-inline-block position-relative">
          <span class="hero-btn-item position-absolute d-none d-md-flex text-heading">Use it:
            <img src="{{ base_url }}public/template/docs/assets/img/backgrounds/Join-community-arrow.png" alt="Join community arrow" class="scaleX-n1-rtl"></span>
            <a href="#" class="btn btn-primary">$this->model( "Example" )</a>
        </div> #}
      </div>
    </div>
  </div>
</section>
<p><br></p>
<div class="card mb-4">
  <div class="card-body">
      <h3 class="card-title">Introduction</h3>
      <div class="card-subtitle text-muted mb-3">
          <blockquote cite="https://www.techtarget.com/whatis/definition/model-view-controller-MVC#:~:text=The%20MVC%20methodology%20separates%20an,out%20other%20data-related%20tasks.">
            The view layer provides the UI necessary to interact with the application. It includes components needed to display the data and enables users to interact with that data. 
            For example, the view layer might include buttons, links, tables, drop-down lists or text boxes.

              <footer style="float:inline-end;">â€”Tech Target, <cite>What is model-view-controller (MVC)?</cite></footer>
          </blockquote>
      </div>
  </div>
</div>
<section id="views">
	<div class="card mb-4">
        <div class="card-body">
            <h3 class="card-title">Templating System</h3>
            <div class="card-subtitle text-muted mb-3">
              Rhapsody Framework uses the Twig template engine to display view files. For simplicity 
              and future compatibility, the framework simply provides a wrapper in which to pass data to 
              Twig; no functionality or syntax in Twig itself has been changed. If you are new to Twig, 
              it is highly recommended to go over some of the <a href="https://twig.symfony.com" target="_blank">Twig documentation</a>. 
              Twig is very powerful, but also very simple to get started in, especially if you have used a PHP 
              template engine in the past, such as Blade or Smarty. At the minimum, you'll want to know about 
              blocks, template inheritance, creating and displaying variables and looping in Twig. 
              The syntax for getting the value of the settings is as follows: 
              <p>
                <code>$this->config->setting('')</code>
              </p>
              <p>In the above example, we would pass the label of the option listed in the .env file, in the 
                form of a string.</p>
              <p>Lets take a look at an example of how we can get the website name and 
                pass it to the Twig view file.</p>
            </div>           
        </div>
    </div>
</section>
{% endblock %}