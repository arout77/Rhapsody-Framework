{% extends 'docs.html.twig' %}

{% block title %}Documentation | Configuration - Rhapsody Framework{% endblock %}

{% block content %}
<section id="configuration">
		<div class="card mb-4">
				<div class="card-body">
						<h3 class="card-title">Configuration</h3>
						<div class="card-subtitle text-muted mb-3">
								<p>Now that you have installed Rhapsody Framework, it's time to set up your environment. First, we'll discuss 
									folder locations, and then editing our configuration file.</p>
								<p class="card-text">
										Before getting started, locate your <code>.env.example</code> file, and rename it to <code>.env</code>. <br>
										This file is the main configuration file that is parsed by the <var>Configuration class</var>, 
										and used throughout the application.
								</p>
								<p>
									<h5 class="card-title">- Moving source files outside of web root</h5>
									The <a href="{{ base_url }}documentation/getting_started/installation" class="bold">Installation instructions</a> 
									assumes a typical install environment where all source files and web assets are placed in the web server 
									document root (or a subfolder beneath it). While it is not required, to follow best security practices, we recommend that 
									you move all of the application's source and configuration files out of the server directory. Your <code>/public</code> 
									folder and .htaccess file should remain in place, but everything else should be moved.
								</p>
								<p>
									Let's say we want to move our file to a folder called 'example-project' in our Documents folder: <br>
									<code>'C:\Users\username\Documents\example-project'</code> (Windows) <br>
									<code>'/home/username/Documents/example-project'</code> (Linux) <br><br>
									To do so, we need to open the folder where we extracted the downloaded files, and move the following 
									folders and files to our 'example-project' folder:
									<ul>
										<li>/app</li>
										<li>/src</li>
										<li>/var</li>
										<li>/vendor</li>
										<li>index.php</li>
										<li>.env</li>
										<li>composer.json</li>
									</ul>
									That will leave us with just the <code>/public</code> folder and an <strong>.htacess</strong> file. 
									Those should be moved to the server document root, or a subfolder under the server document root, if 
									you haven't already, since the /public folder contains your css, JS and other assets that need to be 
									web accessible.
								</p>
								<p>
									After we have moved those folders to our Documents directory, we just have a couple more simple steps to complete. 
									First, we'll need to go back to the server directory where you are keeping the /public folder. In this directory, 
									create a new <code>index.php</code> file. This index.php file will point to the old index.php file 
									that was moved to our 'example-project' folder. Open up the new index.php file, and add the following line:
<br><br>
File:  C:\xampp\www\index.php
<pre style="background-color: #17181a !important;">
<code class="language-php" data-plugin-header="show-language">
&lt;?php
// Replace below with full file path to the original index.php file
require 'C:\Users\username\Documents\example-project\index.php';
</code>
</pre>
								</p>
								<p>
									Once we have created and edited our index.php file, we need to edit a couple settings in 
									the .env file, and that's all there is to it! Open up the .env file, and locate the 
									<strong>base_path</strong> setting. Inside the quote, we need to enter the full file path 
									to our 'example-project' directory:<br>
									<code>base_path = "C:\Users\username\Documents\example-project"</code>
								</p>
								<p>
									Finally, if your <strong>/public</strong> folder is installed in a subdirectory under 
									the server document root, locate the <strong>subdir</strong> setting and enter just the name 
									of the folder (not the full path). For example, if we have our /public folder stored inside 
									<strong>C:\xampp\www\rhapsody\public</strong>, we would enter "rhapsody" as the value, since 
									C:\xampp\www\ is the server document root, and 'rhapsody' is the subdirectory beneath it:<br>
									<code>subdir = "rhapsody"</code>
								</p>
								<p>* Leave this option blank if your /public folder is not in a subdirectory; i.e., directly in 
									server document root (this will likely be the case for most users)
								</p>
								<p>
									<h5 class="card-title">- Editing .env configuration options</h5>
								</p>
								<p><em><strong>Note:</strong> Below we will just be covering the settings that you will find in the .env file. You may 
									also wish to adjust a few template settings, found in your <code>/src/Template.php</code> file. View 
									the <a href="{{ base_url }}documentation/architecture/views">Template documentation</a> for more information.</em></p>
						</div>           

						<div class="alert alert-primary">
								<i class="fa fa-info-circle"></i> Please note that when editing values in the .env file, the values must always be wrapped 
								in double quotes; even integer / boolean values. The parser uses weak type checking to 
								evaluate the values.
						</div>

						<div class="card nav-align-top mb-4">
								<ul class="nav nav-tabs nav-fill" role="tablist">
									<li class="nav-item">
										<button type="button" class="nav-link active" role="tab" data-bs-toggle="tab" data-bs-target="#navs-justified-home" aria-controls="navs-justified-home" aria-selected="true">
											<i class="tf-icons bx bx-data"></i> Database
										</button>
									</li>
									<li class="nav-item">
										<button type="button" class="nav-link" role="tab" data-bs-toggle="tab" data-bs-target="#navs-justified-profile" aria-controls="navs-justified-profile" aria-selected="false">
											<i class="tf-icons bx bx-folder"></i> Folder Locations
										</button>
									</li>
									<li class="nav-item">
										<button type="button" class="nav-link" role="tab" data-bs-toggle="tab" data-bs-target="#navs-justified-messages" aria-controls="navs-justified-messages" aria-selected="false">
											<i class="tf-icons bx bx-globe"></i> Global Application
										</button>
									</li>
								</ul>
								<div class="tab-content">
										<div class="tab-pane fade show active" id="navs-justified-home" role="tabpanel">
												<ul>
														<li><a href="#dbengine">Database Engine</a></li>
														<li><a href="#dbhost">Database Host</a></li>
														<li><a href="#dbport">Database Port</a></li>
														<li><a href="#dbname">Database Name</a></li>
														<li><a href="#dbuser">Database User</a></li>
														<li><a href="#dbpass">Database Pass</a></li>
												</ul>
										</div>
										<div class="tab-pane fade" id="navs-justified-profile" role="tabpanel">
												<ul>
														<li><a href="#apppath">App Directory</a></li>
														<li><a href="#basepath">Base Directory</a></li>
														<li><a href="#logpath">Log Directory</a></li>
														<li><a href="#publicpath">Public Directory</a></li>
														<li><a href="#subdir">Subdirectory</a></li>
														<li><a href="#varpath">Var Directory</a></li>
												</ul>
										</div>
										<div class="tab-pane fade" id="navs-justified-messages" role="tabpanel">
												<div class="row">
													<div class="col-xs-12 col-md-3">
														<h6>Site Settings</h6>
														<ul>
																<li><a href="#siteurl">Site URL</a></li>
																<li><a href="#sitename">Website Name</a></li>
																<li><a href="#sitetz">Timezone</a></li>
																<li><a href="#siteemail">Site Email</a></li>
																<li><a href="#street_address">Address</a></li>
																<li><a href="#city">City</a></li>
																<li><a href="#state">State</a></li>
																<li><a href="#zipcode">Zipcode</a></li>
																<li><a href="#telephone">Phone</a></li>
														</ul>
													</div>

													<div class="col-xs-12 col-md-3">
														<h6>Debug/Error Settings</h6>
														<ul>
																<li><a href="#errorreports">Error Reports</a></li>
																<li><a href="#debugmode">Debug Mode</a></li>
																<li><a href="#debugtoolbar">Debug Toolbar</a></li>
																<li><a href="#logerrors">Error Logging</a></li>
														</ul>

														<h6>Session Settings</h6>
														<ul>
																<li><a href="#sessionname">Session Name</a></li>
																<li><a href="#strictmode">Strict Mode</a></li>
																<li><a href="#cookielife">Cookie Lifetime</a></li>
																<li><a href="#cookiedomain">Cookie Domain</a></li>
																<li><a href="#cookiehttp">Cookie HTTP Only</a></li>
																<li><a href="#sessioncache">Session Cache Limiter</a></li>
														</ul>
													</div>

													<div class="col-xs-12 col-md-3">
														<h6>Misc. Settings</h6>
														<ul>
																<li><a href="#adminip">Admin IP</a></li>
																<li><a href="#dcontroller">Default Controller</a></li>
																<li><a href="#compression">Gzip Compression</a></li>
																<li><a href="#htmlencodetags">HTML Encode Tags</a></li>
																<li><a href="#logfilemaxsize">Log File Max Size</a></li>
																<li><a href="#mailerdsn">Mailer DSN</a></li>
																<li><a href="#maintenancemode">Maintenance Mode</a></li>
																<li><a href="#systemstartup">System Startup Check</a></li>
														</ul>
													</div>

													{# <div class="col-xs-12 col-md-3">
														<h6>&nbsp;</h6>
														<ul>
																<li><a href="#siteurl">site_url</a></li>
																<li><a href="#sitename">site_name</a></li>
																<li><a href="#sitetz">site_timezone</a></li>
																<li><a href="#siteemail">site_email</a></li>
																<li><a href="#street_address">street_address</a></li>
																<li><a href="#city">city</a></li>
																<li><a href="#state">state</a></li>
																<li><a href="#zipcode">zipcode</a></li>
																<li><a href="#telephone">telephone</a></li>
														</ul>
													</div> #}
											</div>
										</div>
								</div>
							</div>

						<div class="divider text-start">
								<div class="divider-text">Database</div>
						</div>
						<dl class="row mt-2">
								<dt class="col-sm-3" id="dbengine">db_type</dt>
								<dd class="col-sm-9">
									<p>
										This option is the database engine that you are using. 
										Options are mysql, mssql, postgresql or ODBC (select mysql if you're using MariaDB).
									</p>
								</dd>
								<dt class="col-sm-3" id="dbhost">db_host</dt>
								<dd class="col-sm-9">
									<p>Where your database is hosted. Set to <strong>localhost</strong> by default.</p>
								</dd>
								<dt class="col-sm-3" id="dbport">db_port</dt>
								<dd class="col-sm-9">
									<p>The port number used to connect to database. Default is 3306.</p>
								</dd>
								<dt class="col-sm-3" id="dbname">db_name</dt>
								<dd class="col-sm-9">
									<p>Your database name. Support for multiple databases will be added in the future.</p>
								</dd>
								<dt class="col-sm-3" id="dbuser">db_user</dt>
								<dd class="col-sm-9">
									<p>Database username</p>
								</dd>
								<dt class="col-sm-3" id="dbpass">db_pass</dt>
								<dd class="col-sm-9">
									<p>Database password</p>
								</dd>
						</dl>

						<div class="divider text-start">
								<div class="divider-text">Folder Locations</div>
						</div>

						<div class="alert alert-warning">
								<i class="fa fa-exclamation-triangle"></i> Not all folder path settings contained in the .env file 
								are listed below. It is recommended to only modify the settings covered here in the 
								documentation.
						</div>

						<dl class="row mt-2">
								<dt class="col-sm-3" id="apppath">app_path</dt>
								<dd class="col-sm-9">
									<p>The name of the <code>app</code> folder. Contains your controllers, models, views and other 
										application logic. If you renamed the folder, enter the name here, including the trailing slash. 
										Otherwise, leave at default settings. 
										<br>
										<strong>Must remain in your base_path directory (see below).</strong>
									</p>
								</dd>
								<dt class="col-sm-3" id="basepath">base_path</dt>
								<dd class="col-sm-9">
									<p><code>Required</code>. The <code>base_path</code> is the full file path to the directory that contains your 
										app, public, src, var and vendor folders. Enter the full path to this folder. DO NOT include 
										a trailing slash.</p>
									<p>
										Example: <br>
										base_path = "C:\xampp\www" (Windows)<br>
										base_path = "/var/www/html" (Linux)
									</p>
									<p><strong>The <code>/app, /src, /var and /vendor folders</code>, 
										as well as the <code>index.php and .env files</code>, must all be kept in the same directory.</strong></p>
								</dd>
								<dt class="col-sm-3" id="logpath">log_path</dt>
								<dd class="col-sm-9">
									<p>The path to the folder that stores system and user generated log files. Set to <code>/var/logs/</code> by default. 
										If you renamed the folder, enter the name here. <strong>Must remain in your base_path directory. Recommended 
											to keep under /var directory as well.
										</strong></p>
								</dd>
								<dt class="col-sm-3" id="publicpath">public_path</dt>
								<dd class="col-sm-9">
									<p>The path to the <code>public</code> folder. This folder is where you will store all of your 
								web accessible assets (css, javascript, images, fonts, etc). you can rename it if you wish, but it must 
						 remain in a folder accessible from the web; i.e., in the server document root.</p>
								</dd>
								<dt class="col-sm-3" id="subdir">subdir</dt>
								<dd class="col-sm-9">
									<p>Reminder: the "installation directory" is considered to be the directory that contains the 
										index.php and htaccess files. If installed in a subdirectory under the server DOCUMENT_ROOT, 
										enter name of subdirectory folder here (not the file path, only the folder name). No trailing slash. Otherwise, leave blank</p>
								
								</dd>
								<dt class="col-sm-3" id="varpath">var_path</dt>
								<dd class="col-sm-9">
									<p>The path to the <code>var</code> folder. This folder contains cache files, system and 
								user generated log files, and scripts (code intended to be run from the command line). 
								Must remain in your base_path directory</p>
								</dd>
						</dl>

						<div class="divider text-start">
							<div class="divider-text">Global Application Settings</div>
						</div>

						<h6 style="text-decoration:underline;">Website</h6>
						<dl class="row mt-2">
							<dt class="col-sm-3" id="siteurl">site_url</dt>
							<dd class="col-sm-9">
								<p><code>Required</code>. Contains your controllers, models, views and other 
									application logic. If you renamed the folder, enter the name here. 
									If you moved it, enter the full path to this folder, including the name. Make sure to include 
									a trailing slash.</p>
							</dd>
							<dt class="col-sm-3" id="sitename">site_name</dt>
							<dd class="col-sm-9">
								<p><code>Required</code>. By default, this value is set to the server document root elsewhere internally by the application. 
									If you haven't moved any of your folders, leave this value blank. Otherwise, enter the 
									full file path to this folder, including the name. 
									If you moved it, enter the full path to this folder, including the name. DO NOT include 
									a trailing slash.</p>
							</dd>
							<dt class="col-sm-3" id="sitetz">site_timezone</dt>
							<dd class="col-sm-9">
								<p><code>Required</code>. Set to <code>/var/logs/</code> by default. 
									If you renamed the folder, enter the name here. If you moved it, enter the full path to this folder, including the name. Make sure to include 
									a trailing slash.</p>
							</dd>
							<dt class="col-sm-3" id="siteemail">site_email</dt>
							<dd class="col-sm-9">
								<p>The path to the <code>public</code> folder. This folder is where you will store all of your 
							web accessible assets (css, javascript, images, fonts, etc). you can rename it if you wish, but it must 
					 remain in a folder accessible from the web; i.e., in the server document root.</p>
							</dd>
							<dt class="col-sm-3" id="address">street_address</dt>
							<dd class="col-sm-9">
								<p>Reminder: the "installation directory" is considered to be the directory that contains the 
									index.php and htaccess files. If installed in a subdirectory under the server DOCUMENT_ROOT, enter name of subdirectory
									 folder here. No trailing slash. Otherwise, leave blank</p>
							</dd>
							<dt class="col-sm-3" id="city">city</dt>
							<dd class="col-sm-9">
								<p>The path to the <code>var</code> folder. This folder contains cache files, system and 
							user generated log files, and scripts (code intended to be run from the command line). 
							If you renamed the folder, enter the name here. If you moved it, enter the full path to this folder, including the name. Make sure to include 
							a trailing slash.</p>
							</dd>
							<dt class="col-sm-3" id="state">state</dt>
							<dd class="col-sm-9">
								<p>The path to the <code>var</code> folder. This folder contains cache files, system and 
							user generated log files, and scripts (code intended to be run from the command line). 
							If you renamed the folder, enter the name here. If you moved it, enter the full path to this folder, including the name. Make sure to include 
							a trailing slash.</p>
							</dd>
							<dt class="col-sm-3" id="zipcode">zipcode</dt>
							<dd class="col-sm-9">
								<p>The path to the <code>var</code> folder. This folder contains cache files, system and 
							user generated log files, and scripts (code intended to be run from the command line). 
							If you renamed the folder, enter the name here. If you moved it, enter the full path to this folder, including the name. Make sure to include 
							a trailing slash.</p>
							</dd>
							<dt class="col-sm-3" id="telephone">telephone</dt>
							<dd class="col-sm-9">
								<p>The path to the <code>var</code> folder. This folder contains cache files, system and 
							user generated log files, and scripts (code intended to be run from the command line). 
							If you renamed the folder, enter the name here. If you moved it, enter the full path to this folder, including the name. Make sure to include 
							a trailing slash.</p>
							</dd>
					</dl>

			<h6 style="text-decoration:underline;">Debug / Error</h6>
						<dl class="row mt-2">
							<dt class="col-sm-3" id="errorreports">error_reports</dt>
							<dd class="col-sm-9">
								<p><code>Required</code>. Set the level of PHP's error reporting. Options are 
				<strong>ON / OFF / DEV MODE</strong></p>
				<p>
					'ON' sets error reporting to E_ALL & ~E_NOTICE [show all errors except notices]. <br>
					'DEV MODE' sets error reporting to E_ALL [show all errors, including notices] <br>
					'OFF' turns error reporting off completely
				</p>
				<p>
					If set to ON or DEV MODE, errors will be displayed in the browser, as well as logged 
					to the system.log file. MAKE SURE TO TURN THIS SETTING OFF IN PRODUCTION.
				</p>
							</dd>
							<dt class="col-sm-3" id="debugmode">debug_mode</dt>
							<dd class="col-sm-9">
								<p><code>Required</code>. Options are <strong>ON / OFF</strong>. If debug_mode is turned on, you will get more detailed custom 
				error messages. Requires error_reports to be ON or DEV MODE to use this feature.</p>
							</dd>
							<dt class="col-sm-3" id="debugtoolbar">debug_toolbar</dt>
							<dd class="col-sm-9">
								<p><code>Required</code>. Options are <strong>ON / OFF</strong>.  
									The Debug Toolbar provides environment and performance information. This should also be turned off 
				on a profuction site.</p>
							</dd>
							<dt class="col-sm-3" id="logerrors">log_errors</dt>
							<dd class="col-sm-9">
								<p><code>Required</code>. Options are <strong>ON / OFF</strong>. Log run time errors to file ( /var/logs/system.log ). Options are <strong>ON / OFF</strong>. 
					Turning this off will disable error logging completely, however, you can still manually log errors using the
					Logger class.
				</p>
							</dd>
						</dl>

			<h6 style="text-decoration:underline;">Session</h6>
			<dl class="row mt-2">
				<dt class="col-sm-3" id="sessionname">session.name</dt>
				<dd class="col-sm-9">
					<p>Set the session cookie name. Make sure it is something unique. Set to RhapsodyPHPSessionID
					 by default.
					</p>
				</dd>
				<dt class="col-sm-3" id="debugmode">session.use_strict_mode</dt>
				<dd class="col-sm-9">
					<p>Session strict mode. Recommended to leave this enabled for session security. 0 = disabled 1 = enabled.</p>
				</dd>
				<dt class="col-sm-3" id="debugtoolbar">session.cookie_lifetime</dt>
				<dd class="col-sm-9">
					<p>Session cookie lifetime. Default setting is zero; i.e. until browser is closed. 
					 Set this value in seconds if you wish to change the default behavior.</p>
				</dd>
				<dt class="col-sm-3" id="logerrors">session.cache_limiter </dt>
				<dd class="col-sm-9">
					<p>Session cache limiter. Default is 'nocache'. [Options: nocache, private, private_no_expire, public]
					 See <a href="http://php.net/manual/en/function.session-cache-limiter.php" class="bold" target="_blank">
					 PHP sessions documentation</a> for more information about each setting.</p>
				</dd>
			</dl>

			<h6 style="text-decoration:underline;">Misc. Settings</h6>
			<dl class="row mt-2">
				<dt class="col-sm-3" id="adminip">admin_ip</dt>
				<dd class="col-sm-9">
					<p>
						A comma separated list of IPv4 and IPv6 addresses used to control access to restricted areas of the 
						website. These IP addresses are added to a whitelist. Most systems will have both an IPv4 and IPv6 
						address, in which case the IPv6 address takes priority over the IPv4. However, unless you are certain 
						that you have a static IPv6 address, you should enter BOTH your IPv4 and IPv6 addresses so that the 
						framework can use your IPv4 address as a fallback in case your IPv6 address changes. 
						If you do not have IPv6 enabled, you can just enter your IPv4 address. Also note that 
						IPv4 addresses are dynamic as well, unless your machine has a static IPv4 address assigned, so these 
						settings should be checked often and updated as needed to ensure security.<br>
						To check your IPv4 and IPv6 addresses, you can visit <a href="https://whatismyipaddress.com/" target="_blank" class="bold">
							https://whatismyipaddress.com
						</a>
						<br>
						<strong>Note that a whitelist <em>grants access to</em> an area, whereas a blacklist <em>blocks access to</em> an area.</strong>
					</p>
				</dd>
				<dt class="col-sm-3" id="compression">compression</dt>
				<dd class="col-sm-9">
					<p>Whether or not to enable Gzip compression. Enabled by default<br>
						Set to ON to enable compression, OFF to disable
						<br>
						If you get a blank page when compression is enabled,
						it means that you are putting out content before the page
						has begun loading.
						<br>
						Nothing can be sent to the browser before compression begins,
						even blank spaces.
					</p>
				</dd>
				<dt class="col-sm-3" id="dcontroller">default_controller</dt>
				<dd class="col-sm-9">
					<p><code>Required</code>. The default controller to be called by the router if none is specified. 
						Enter the name of you controller, without the '_Controller' or .php extension; 
						e.g., 'Home_Controller' is just 'Home'. <br> 
					In Rhapsody Framework, url mapping is done through HTTP requests, rather than via cofiguration files. 
					Visit the <a href="{{ base_url }}documentation/architecture/routing" class="bold">Router documentation</a> to 
				learn more about routing with Rhapsody Framework.</p>
				</dd>
				<dt class="col-sm-3" id="htmlencodetags">html_encode_tags</dt>
				<dd class="col-sm-9">
					<p>
						<code>Required</code>. 
						By default, the system will inspect every single $_POST and $_GET submitted for unwanted
						or potentially dangerous input. However, many HTML tags are relatively benign, 
						and even useful in some applications that want to allow user submitted HTML.
						Most HTML tags simply deal with styling or content structure. Some examples of safe tags
						are &lt;p>, &lt;ol>, &lt;li>, &lt;h1> through &lt;h6> and so on.<br>
						Examples of dangerous tags are ones which would allow code to be injected, such as &lt;script>
						tags which executed Javascript code.<br>
						Should dangerous HTML tags be allowed to be submitted but automatically encoded by the system, 
						or should they be removed entirely? Encoding the tags will simply convert the special characters 
						to html entities, allowing you to display the submitted tags in a web page without actually executing the code.
						This could be useful for example in a website that allows users to share code snippets. <br>
						You can also either choose to remove them completely, or turn this feature off and allow all tags 
						to be submitted. Only turn this off if you understand the ramifications. 
						If you're unsure, just leave the following on it's default option 'encode'
						Options are:  off | encode | remove
					</p>
				</dd>
				<dt class="col-sm-3" id="logfilemaxsize">log_file_max_size</dt>
				<dd class="col-sm-9">
					<p>The maximum allowable size for error log files. Enter a number, in MB, to set the file size limit. 
						By default, this is set to 100. (100MB)
					</p>
				</dd>
				<dt class="col-sm-3" id="maintenancemode">maintenance_mode</dt>
				<dd class="col-sm-9">
					<p>Set this flag to "ON" to enable maintenance mode on your application. All web traffic to the site 
						will be redirected to a "down for maintenance" page. <strong>CAUTION:</strong> all automated scripts, 
						such as any scheduled cronjobs, will still run. You will need to disable them manually. 
					</p>
				</dd>
				<dt class="col-sm-3" id="mailerdsn">MAILER_DSN</dt>
				<dd class="col-sm-9">
					<p>This setting is used by the Symfony Mailer component. If you'll be using the Symfony Mailer, 
						enter your DSN settings here, in the following format:<br>
						<code>smtp://user:password@smtp.example.com:port</code> 
					</p>
				</dd>
				<dt class="col-sm-3" id="systemstartup">system_startup_check</dt>
				<dd class="col-sm-9">
					<p>
						If you are having any issues, particularly after initial install, you can set the system_startup_check 
						flag to "ON" and it will run some basic environment checks to determine any potential issues. <br>
						The functionality of this feature will be expanded on in the future, but for now is just meant to 
						be a quick way to check for some common issues.
					</p>
				</dd>
			</dl>
				</div>
		</div>

		<div class="card mb-4">
			<div class="card-body">
					<h3 class="card-title">How To Access Configuration Settings</h3>
					<div class="card-subtitle text-muted mb-3">
						Typically, you would access the configuration settings contained in the .env file directly in your 
						controllers, or pass them from your controllers as variables to your views. You may also access 
			them in your <a href="{{ base_url }}documentation/components/scripts">custom scripts</a>. 
						The syntax for getting the value of the settings is as follows: 
						<p>
							<code>$this->config->setting('')</code>
						</p>
						<p>In the above example, we would pass the label of the option listed in the .env file, in the 
							form of a string.</p>
						<p>Lets take a look at an example of how we can get the website name and 
							pass it to the Twig view file.</p>
					</div>           
			</div>
	</div>

File:  /app/controllers/Example_Controller.php
<pre>
<code class="language-php" data-plugin-header="show-language">
&lt;?php
namespace App\Controller;
use Src\Controller\Base_Controller;

class Example_Controller extends Base_Controller
{
	public function index()
	{
		// Get the 'site_name' option from .env and assign it to $foo
		$foo = $this->config->setting('site_name');

		// Get the 'site_url' option from .env and assign it to $bar
		$bar = $this->config->setting('site_url');

		// Set the Twig template file
		// Instantiate Twig variable 'website_name' and assign it value of $foo
		// Do the same with 'url' and $bar
		$this->template->render('example.html.twig', [
			'website_name' 	=> $foo,
			'url' 			=> $bar,
		]);
	}
}
</code>
</pre>
</section>
{% endblock %}